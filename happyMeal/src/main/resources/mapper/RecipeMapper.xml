<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meal.happy.dao.RecipeDAO">
      
	<insert id="recipeInsert">
		insert into recipe(recipe_no, recipe_thumbnail,recipe_parts, userid, recipe_name, ip, recipe_manual01)
		values(recipe_sq.nextval,#{recipe_thumbnail},#{recipe_parts}, #{userid}, #{recipe_name}, #{ip}, #{recipe_manual01})
	</insert>
	<select id="recipeTotalRecord_user" resultType="int">
		select count(b.recipe_no) totalRecord from recipe b join member r on b.userid=r.userid
		
		    where r.admin = 0   

		<if test="searchWord!=null">
			and ${searchKey} like '%${searchWord}%'
		</if>
	</select> 	 
	   
	<select id="recipeTotalRecord" resultType="int">
		select count(b.recipe_no) totalRecord from recipe b join member r on b.userid=r.userid
		
		    where r.admin = 1

		<if test="searchWord!=null">
			and ${searchKey} like '%${searchWord}%'
		</if>
	</select>
	
	
	<select id="pageSelect_user" resultType="com.meal.happy.dto.RecipeDTO">
		select * from
			(select * from
				(
					select b.recipe_no, b.recipe_name, b.recipe_thumbnail, b.userid, r.username, b.recipe_hit, to_char(b.recipe_date,'MM-DD HH:MI') recipe_date 
					from recipe b join member r on b.userid=r.userid 
					
					<if test="searchWord!=null"><!-- 검색어가 있을 경우 -->
						and ${searchKey} like '%${searchWord}%'  
					</if>

					where r.admin = 0
					order by b.recipe_no desc
				) 
				
				<![CDATA[
				where rownum<=${onePageRecord*nowPage} order by recipe_no asc	
				]]>
				)
				<choose>
					<when test="nowPage!=totalPage">
					<![CDATA[
					where rownum <=${onePageRecord} order by recipe_no desc
					]]>
					</when>
					<when test="nowPage==totalPage">
					<![CDATA[
					where rownum <=${lastPageRecord} order by recipe_no desc
					]]>	
					</when>
				</choose>
	</select>
	  
	<select id="pageSelect" resultType="com.meal.happy.dto.RecipeDTO">
		select * from
			(select * from
				(
					select b.recipe_no, b.recipe_name,b.recipe_cal,b.recipe_car,b.recipe_pro,b.recipe_fat,b.recipe_na, b.recipe_thumbnail, b.userid, r.username, b.recipe_hit, to_char(b.recipe_date,'MM-DD HH:MI') recipe_date 
					from recipe b join member r on b.userid=r.userid 
					

					<if test="searchWord!=null"><!-- 검색어가 있을 경우 -->
						and ${searchKey} like '%${searchWord}%'  
					</if>
					<if test="parts1!=null"><!-- 검색어가 있을 경우 -->
						and recipe_parts like '%${parts1}%'  
					</if>
					<if test="parts2!=null"><!-- 검색어가 있을 경우 -->
						and recipe_parts like '%${parts2}%'  
					</if>
					<if test="parts3!=null"><!-- 검색어가 있을 경우 -->
						and recipe_parts like '%${parts3}%'  
					</if>
					<if test="parts4!=null"><!-- 검색어가 있을 경우 -->
						and recipe_parts like '%${parts4}%'  
					</if>
					<if test="parts5!=null"><!-- 검색어가 있을 경우 -->
						and recipe_parts like '%${parts5}%'  
					</if>
					<if test="delparts1 != null and !delparts1.isEmpty()">
					    and recipe_parts not like '%${delparts1}%' 
					</if>
					<if test="delparts2 != null and !delparts2.isEmpty()">
					    and recipe_parts not like '%${delparts2}%' 
					</if>
					<if test="delparts3 != null and !delparts3.isEmpty()">
					    and recipe_parts not like '%${delparts3}%' 
					</if>
					<if test="delparts4 != null and !delparts4.isEmpty()">
					    and recipe_parts not like '%${delparts4}%' 
					</if>
					<if test="delparts5 != null and !delparts5.isEmpty()">
					    and recipe_parts not like '%${delparts5}%' 
					</if>
					
					where r.admin = 1
					order by b.recipe_no desc
				) 
				
				<![CDATA[
				where rownum<=${onePageRecord*nowPage} order by recipe_no asc	
				]]>
				)
				<choose>
					<when test="nowPage!=totalPage">
					<![CDATA[
					where rownum <=${onePageRecord} order by recipe_no desc
					]]>
					</when>
					<when test="nowPage==totalPage">
					<![CDATA[
					where rownum <=${lastPageRecord} order by recipe_no desc
					]]>	
					</when>
				</choose>
	</select>
	
	<select id="recipeSelect" resultType="com.meal.happy.dto.RecipeDTO">
		select b.recipe_no, b.recipe_name,  
		b.recipe_manual_img01, b.recipe_manual_img02, b.recipe_manual_img03, b.recipe_manual_img04, b.recipe_manual_img05, b.recipe_manual_img06, 
		b.recipe_manual01, b.recipe_manual02, b.recipe_manual03, b.recipe_manual04, b.recipe_manual05, b.recipe_manual06,  
		r.username, r.userid, b.recipe_hit, b.recipe_date, b.recipe_parts 
		from recipe b join member r on b.userid= r.userid
		and b.recipe_no=${param1}
	</select>
	
	<update id ="recipeHitCount">
		update recipe set recipe_hit=recipe_hit+1 where recipe_no=${param1}
	</update>
    
    <select id="recipeEditSelect" resultType="com.meal.happy.dto.RecipeDTO">
		select recipe_no, recipe_name, recipe_manual01, recipe_parts,recipe_thumbnail from recipe where recipe_no=${param1}
	</select>
	
	<update id="recipeUpdate" parameterType="com.meal.happy.dto.RecipeDTO">
		update recipe set recipe_parts=#{recipe_parts}, recipe_thumbnail=#{recipe_thumbnail}, recipe_name=#{recipe_name}, recipe_manual01=#{recipe_manual01} 
		where recipe_no=${recipe_no} and userid=#{userid}
	</update>
    <delete id="recipeDelete">
		delete from recipe where recipe_no=${recipe_no} and userid=#{userid}
	</delete>
        
  </mapper>