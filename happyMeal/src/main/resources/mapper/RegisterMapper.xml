<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meal.happy.dao.RegisterDAO">
	<select id="loginOk" resultType="com.meal.happy.dto.RegisterDTO">
		select userid, username from member
		where userid = #{param1} and userpwd = #{param2}
	</select>
	<select id="idCheck" parameterType="String" resultType="int">
		select count(userid) cnt from member where userid=#{userid}
	</select>
	<insert id="registerInsert">
		insert into member(userid, usernum, userpwd, username, age, gender, nickname, email, disease) 
		values (#{userid},usernum_sq.nextval, #{userpwd}, #{username}, #{age}, #{gender}, #{nickname}, #{email}, #{disease})
	</insert>
	<select id="myPage" resultType="com.meal.happy.dto.RegisterDTO">
		select userid, username, nickname, to_char(age, 'yy-MM-DD') age, email, gender, disease, bmi, kal, standardBmi from member 
		where userid=#{param1}
	</select>
	<select id="checkPasswordOk" resultType="com.meal.happy.dto.RegisterDTO">
		select userid, username from member
		where userid = #{param1} and userpwd = #{param2}
	</select>
	<select id="checkPassword" resultType="com.meal.happy.dto.RegisterDTO">
		select userid, userpwd, username, nickname, to_char(age, 'yy-MM-DD') age, email, gender, disease from member 
		where userid=#{param1}
	</select>
	<select id="registerEdit" resultType="com.meal.happy.dto.RegisterDTO">
		select userid, userpwd, username, nickname, to_char(age, 'yy-MM-DD') age, email, gender, disease from member 
		where userid=#{param1}
	</select>
	<update id="registerEditOk">
		update member set userpwd=#{userpwd}, nickname=#{nickname}, age=#{age}, gender=#{gender}, email=#{email}
		, disease=#{disease} where userid=#{userid}
	</update>
	<select id="idSearch" resultType="string">
		select userid from member where username=#{param1} and email=#{param2}
	</select>

	<select id="selectComm" resultType="com.meal.happy.dto.CommDTO">
		select comm_no, comm_title from (select * from community order by rownum desc) where userid = #{param1} and rownum =1
	</select>
	
	<select id="selectRecipe" resultType="com.meal.happy.dto.RecipeDTO">
		select recipe_no, recipe_name from (select * from recipe order by rownum desc) where userid = #{param1} and rownum =1
	</select>

	<select id="selectMenu" resultType="com.meal.happy.dto.MenuUserDTO">
		select menu_no, menu_title from (select * from menu order by rownum desc) where userid = #{param1} and rownum =1
	</select>
		
	<select id="selectSup" resultType="com.meal.happy.dto.SupDTO">
		select sup_no, sup_title from (select * from support order by rownum desc) where userid = #{param1} and rownum =1
	</select>
	
	<select id="selectCommComment" resultType="com.meal.happy.dto.CommCommentDTO">
		SELECT cc.comm_comment_no, cc.comm_no, c.comm_title, cc.comm_comment_text
		FROM community_comment cc
		INNER JOIN community c ON cc.comm_no = c.comm_no
		WHERE cc.userid = #{param1} and rownum =1
		ORDER BY cc.comm_comment_no DESC
	</select>
	
	<select id="selectRecipeComment" resultType="com.meal.happy.dto.RecipeCommentDTO">
		SELECT *
		FROM recipe_comment re
		INNER JOIN recipe r ON re.recipe_no = r.recipe_no
		WHERE re.userid = #{param1} and rownum =1
		ORDER BY re.recipe_comment_no DESC
	</select>
	
	<select id="selectMenuComment" resultType="com.meal.happy.dto.MenuUserCommentDTO">
		SELECT me.menu_comment_no, me.menu_no, m.menu_title, me.menu_comment_text
		FROM menu_comment me
		INNER JOIN menu m ON me.menu_no = m.menu_no
		WHERE me.userid = #{param1} and rownum =1
		ORDER BY me.menu_comment_no DESC
	</select>

	<select id="pwSearch" resultType="string">
		select userpwd from member 
		where userid=#{param1} and email=#{param2}
	</select>
	<update id="updateTempPw">
		update member set userpwd=#{userpwd} where userid=#{userid}
	</update>
	
	<update id="updateBMIAndKal">
    UPDATE member SET bmi = #{param2}, kal = #{param3}, standardBmi=#{param4}
    WHERE userid = #{param1} AND (bmi != #{param2} OR kal != #{param3})
	</update>
	
	
	<select id="recipeTotalRecord_user" resultType="int">
		select count(b.recipe_no) totalRecord from recipe b join member r on b.userid=r.userid
		
		    where b.userid = #{userid}   


	</select> 
	
		 
	<select id="pageSelect_user" resultType="com.meal.happy.dto.RecipeDTO">
		select * from
			(select * from
				(
					select b.recipe_no, b.recipe_name, b.recipe_thumbnail, b.userid, r.username, b.recipe_hit, to_char(b.recipe_date,'MM-DD HH:MI') recipe_date 
					from recipe b join member r on b.userid=r.userid 

					where b.userid = #{userid}
					order by b.recipe_no desc
				) 
				
				<![CDATA[
				where rownum<=${onePageRecord*nowPage} order by recipe_no asc	
				]]>
				)
				<choose>
					<when test="nowPage!=totalPage">
					<![CDATA[
					where rownum <=${onePageRecord} order by recipe_no desc
					]]>
					</when>
					<when test="nowPage==totalPage">
					<![CDATA[
					where rownum <=${lastPageRecord} order by recipe_no desc
					]]>	
					</when>
				</choose>
	</select>
	
	<select id="menuTotalRecord_user" resultType="int">
		select count(m.menu_no) totalRecord from menu m join member r on m.userid=r.userid
		
		where m.userid = #{userid}   

	</select>
  	
	<select id="menu_pageSelect_user" resultType="com.meal.happy.dto.MenuUserDTO">
		select * from
			(select * from
				(
					select r.username,r.nickname,b.menu_thumbnail, b.menu_no, b.amenu_type_no, b.userid, b.menu_title, b.menu_text, b.menu_hit, to_char(b.menu_date,'MM-DD HH:MI') menu_date 
					from menu b join member r on b.userid=r.userid 
					
					where b.userid = #{userid}
					order by b.menu_no desc
				) 
				
				<![CDATA[
				where rownum<=${onePageRecord*nowPage} order by menu_no asc	
				]]>
				)
				<choose>
					<when test="nowPage!=totalPage">
					<![CDATA[
					where rownum <=${onePageRecord} order by menu_no desc
					]]>
					</when>
					<when test="nowPage==totalPage">
					<![CDATA[
					where rownum <=${lastPageRecord} order by menu_no desc
					]]>	
					</when>
				</choose>
	</select>
	
	<select id="totalRecord" resultType="int">
		select count(b.comm_no) totalRecord from community b join member r on b.userid=r.userid
		where b.userid = #{userid}
	</select>
	

	<select id="pageSelect" resultType="com.meal.happy.dto.CommDTO">
		select * from
			(select * from
				(
					select b.comm_no, b.comm_bullet_point, b.comm_title, b.userid, r.username, b.comm_hit, to_char(b.comm_date,'MM-DD HH:MI') comm_date 
					from community b join member r on b.userid=r.userid 
					
					where b.userid = #{userid}
					order by b.comm_no desc
				) 
				
				<![CDATA[
				where rownum<=${onePageRecord*nowPage} order by comm_no asc	
				]]>
				)
				<choose>
					<when test="nowPage!=totalPage">
					<![CDATA[
					where rownum <=${onePageRecord} order by comm_no desc
					]]>
					</when>
					<when test="nowPage==totalPage">
					<![CDATA[
					where rownum <=${lastPageRecord} order by comm_no desc
					]]>	
					</when>
				</choose>
	</select>
	
	<select id="comm_Comment_PageSelect" resultType="com.meal.happy.dto.CommCommentDTO">
		SELECT cc.comm_comment_no, cc.comm_no, c.comm_title, cc.comm_comment_text, cc.comm_comment_date
		FROM community_comment cc
		INNER JOIN community c ON cc.comm_no = c.comm_no
		WHERE cc.userid = #{userid}
		ORDER BY cc.comm_comment_no DESC
	</select>
	
	<select id="recipe_Comment_PageSelect_user" resultType="com.meal.happy.dto.RecipeCommentDTO">
		SELECT re.recipe_no, re.recipe_comment_text,re.userid,re.recipe_comment_date,r.recipe_name
		FROM recipe_comment re
		INNER JOIN recipe r ON re.recipe_no = r.recipe_no
		WHERE re.userid = #{userid}
		ORDER BY re.recipe_comment_no DESC
	</select>
	
	<select id="menu_Comment_PageSelect_user" resultType="com.meal.happy.dto.MenuUserCommentDTO">
		SELECT me.menu_comment_no, me.menu_no, m.menu_title, me.menu_comment_text, me.menu_comment_date
		FROM menu_comment me
		INNER JOIN menu m ON me.menu_no = m.menu_no
		WHERE me.userid = #{userid}
		ORDER BY me.menu_comment_no DESC
	</select>
	
</mapper>