<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--
		Interceptor 는 접속하는 DispatcherServlet 의 매핑주소에 따라 실행을 인터셉터 해준다.
		
		1. beans 태그에 context, mvc 를 추가 해준다.
			(지금 화면 밑에, Namespaces 탭에서 추가 가능)
			web.xml 에 파일 등록
			(/WEB-INF/spring/appServlet/mvc-context.xml)
			
		매핑주소 기록
		로그인 되어 있지 않을 경우, 접속하면 interception 처리를 하여야 하는 매핑주소를 기록하는 태그 생성			
		
	-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/logout" />
			<mvc:mapping path="/joinEdit" />
			<mvc:mapping path="/joinEditOk" />
			
			<mvc:mapping path="/data/dataWrite" />
			<mvc:mapping path="/data/dataWriteOk" />
			<mvc:mapping path="/data/dataEdit"/>
			
			<mvc:mapping path="/commentSend"/>
			<mvc:mapping path="/sup/supWrite"/>
			<mvc:mapping path="/sup/supAnswer/{sup_no}"/>
			
			<bean class="com.meal.happy.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 파일 업로드 -->
	<!--
		multipartResolver : 이름이 정해져 있음 
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
	
</beans>
